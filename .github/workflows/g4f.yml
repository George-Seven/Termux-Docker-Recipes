name: Build G4F Docker Image

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: xtekky/gpt4free
          path: .

      - name: Setup G4F
        run: |
          echo '
          @@ -1,4 +1,4 @@
          -FROM selenium/node-chrome
          +FROM selenium/node-chromium
           
           ARG G4F_VERSION
           ENV G4F_VERSION $G4F_VERSION
          @@ -17,12 +17,17 @@
           
           # Install Python3, pip, remove OpenJDK 11, clean up
           RUN apt-get -qqy update \
          +  && dpkg-divert --remove /lib32 \
          +  && dpkg-divert --remove /libo32 \
          +  && dpkg-divert --remove /lib64 \
             && apt-get -qqy upgrade \
             && apt-get -qyy autoremove \
             && apt-get -qqy install python3 python-is-python3 pip \
             && apt-get -qyy remove openjdk-11-jre-headless \
             && apt-get -qyy autoremove \
             && apt-get -qyy clean \
          +  && python3 -m ensurepip --upgrade \
          +  && python3 -m pip install --no-cache-dir --upgrade pip setuptools \
             && rm -rf /var/lib/apt/lists/* /var/cache/apt/*
           
           # Update entrypoint
          @@ -33,7 +38,7 @@
           COPY docker/background.png /usr/share/images/fluxbox/ubuntu-light.png
           
           # Add user, fix permissions
          -RUN chown "${SEL_UID}:${SEL_GID}" $HOME/.local /opt/venv/share
          +RUN mkdir -p $HOME/.local && chown "${SEL_UID}:${SEL_GID}" $HOME/.local /opt/venv/share
           
           # Switch user
           USER $SEL_UID
          @@ -44,10 +49,16 @@
           # Copy the project'\''s requirements file into the container.
           COPY requirements.txt $G4F_DIR
           
          +# Switch user
          +USER root
          +
           # Upgrade pip for the latest features and install the project'\''s Python dependencies.
          -RUN pip install --break-system-packages --upgrade pip \
          +RUN pip install --break-system-packages --upgrade pip supervisor \
             && pip install --break-system-packages -r requirements.txt
           
          +# Switch user
          +USER $SEL_UID
          +
           # Copy the entire package into the container.
           ADD --chown=$SEL_UID:$SEL_GID g4f $G4F_DIR/g4f
          ' | patch -p1 docker/Dockerfile
          echo "ref_name=$(git symbolic-ref --short HEAD 2>/dev/null || git describe --tags --exact-match 2>/dev/null || echo "detached")" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME  }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}

      - name: Build and push arm64 image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/g4f:latest
          labels: ${{ secrets.DOCKERHUB_USERNAME }}/g4f:latest
          build-args: |
            G4F_VERSION=${{ env.ref_name }}
